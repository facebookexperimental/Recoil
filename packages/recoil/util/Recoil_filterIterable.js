/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @emails oncall+recoil
 * @flow strict
 * @format
 */
'use strict';

/**
 * Creates a new iterable whose output is generated by passing the input
 * iterable's values through the filter function.
 */
function* filterIterable<T>(
  iterable: Iterable<T>,
  predicate: (v: T, index: number) => boolean,
): Iterable<T> {
  // Use generator to create iterable/iterator
  let index = 0;
  for (const value of iterable) {
    if (predicate(value, index++)) {
      yield value;
    }
  }
}

module.exports = filterIterable;
