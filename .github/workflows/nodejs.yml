# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        react: ['17.0.2', '18.0.0-rc.0']

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i -g yarn
    - run: cd packages-ext/recoil-devtools && yarn install --frozen-lockfile
    - run: yarn install --frozen-lockfile
    - name: Install React (Unix/Mac)
      run: >
       sed -i'' -e 's/\("react\(-dom\)\{0,1\}\(-test-renderer\)\{0,1\}": "\).*"/\1${{ matrix.react }}"/g' package.json
      if: matrix.os != 'windows-latest'
    - name: Install React (Windows)
      run: >
       sed -i 's/\(""react\(-dom\)\\{0,1\\}\(-test-renderer\)\\{0,1\\}"": ""\).*""/\1${{ matrix.react }}""/g' package.json
      if: matrix.os == 'windows-latest'
    - run: yarn install
    - run: yarn flow
    - run: yarn test:typescript
    - run: yarn test
    - run: yarn lint
    - run: yarn build
    - run: yarn pack
    - name: Create package
      uses: actions/upload-artifact@v2
      with:
        name: package
        path: "*.tgz"
